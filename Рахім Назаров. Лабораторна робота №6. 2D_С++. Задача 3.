#include <iostream>
#include <cstdlib>
#include <ctime>

int main() {
    int n, m;
    std::cout << "Enter matrix dimensions n and m: ";
    std::cin >> n >> m;

    // Динамічне створення матриці
    int** matrix = new int*[n];
    for (int i = 0; i < n; ++i)
        matrix[i] = new int[m];

    // Генерація випадкових чисел у діапазоні [a, b]
    int a, b;
    std::cout << "Enter interval [a, b]: ";
    std::cin >> a >> b;

    srand(time(0)); // Ініціалізація генератора випадкових чисел
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            matrix[i][j] = a + rand() % (b - a + 1);
            std::cout << matrix[i][j] << " ";
        }
        std::cout << std::endl;
    }

    // Відображення верхньої половини матриці на нижню симетрично
    for (int i = 0; i < n / 2; ++i) {
        for (int j = 0; j < m; ++j) {
            matrix[n - i - 1][j] = matrix[i][j];
        }
    }

    std::cout << "Symmetric matrix: " << std::endl;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            std::cout << matrix[i][j] << " ";
        }
        std::cout << std::endl;
    }

    // Пошук елементів у діапазоні [a/2, b/2]
    std::cout << "Elements in range [" << a/2 << ", " << b/2 << "]: ";
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            if (matrix[i][j] >= a / 2 && matrix[i][j] <= b / 2) {
                std::cout << matrix[i][j] << " ";
            }
        }
    }
    std::cout << std::endl;

    // Звільнення пам'яті
    for (int i = 0; i < n; ++i)
        delete[] matrix[i];
    delete[] matrix;

    return 0;
}
